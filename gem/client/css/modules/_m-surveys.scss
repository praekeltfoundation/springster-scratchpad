// Chris Sergienko - Praekelt Consulting (2016/09/30)

.surveys {
    $block: unquote("#{&}"); // Node LibSass workaround for @at-root bug. This stores the value of `&` as a variable.
    padding: 24px;

    &__title {
        line-height: 1.15;
        font-family: $font-family-avenirBold;
        padding: 25px 0 15px;
    }

    &__intro {
        font-family: $font-family-avenir-ot;
    }

    &__helptext {
        display: block;
        font-size: 16px;
    }

    &__form {
        padding: 24px 16px;
        background-color: $colorWhiteSmoke;

        fieldset {
          @extend %gem__field;
        }

        label {
          @extend %gem__label;
        }

        input,
        textarea,
        select {
          @extend %gem__input;
        }

        textarea {
            padding: 16px 8px;
        }

        [type="checkbox"],
        [type="radio"] {
            @extend %gem__checkbox;
        }
    }

    &__item + &__item {
        padding-top: 24px;
        margin-top: 24px;
        border-top: 1px solid #ffffff;
    }

    &__tout {
        background-color: $colorFirst;
        color: #ffffff;
        margin: 0 0 24px 0;
        padding: 0 16px;
        text-align: center;

        .section-title {
            text-align: left;

          h2 {
            height: 30px;
            line-height: 30px;
            margin: 0 0 24px 0;
            font-family: 'AvenirNextCondensed-Medium', sans-serif;
            text-align: center;
            background-color: #ae016d;
            font-size: 12px;
            font-weight: normal;

            @media screen and (min-width: 320px) {
                height: 40px;
                line-height: 40px;
                font-size: 16px;
                padding: 0 16px;
                margin: 0 0 56px 0;
                display: inline-block;
            }
          }
        }

        h3 {
            font-family: 'TWCenMT', sans-serif;
            font-weight: normal;
            font-size: 24px;
            line-height: 32px;
            margin: 0 0 24px 0;
        }

        p {
          padding: 0 8px;
          font-size: 14px;
          margin: 0 0 24px 0;

          @media screen and (min-width: 320px) {
            font-size: 18px;
            padding: 0;
          }
        }

        img {
          width: 116px;
          margin: 0 auto 24px auto;
          display: block;
        }

        input[type=submit], .button {
          background: #fff;
          color: $colorFirst;
          margin: 0 0 32px 0;
        }
    }

    .call-to-action--surveys {
        text-align: center;
    }

    &__thank-you {
        line-height: 1.15;
        font-family: $font-family-avenirBold;
        text-align: center;
    }
}

// These placeholder extends exist to make refactoring these elements into proper BEM easier. Currently the styles they are applied on target the element selector directly.
%gem__field {
    display: block;
    border: 0;
    padding: 10px 0;
    margin: 0;

    & + & {
        margin-top: 24px;
    }

    // Checkbox/Radio Groups
    ul {
        list-style: none;
        margin: 0;
        padding: 0;

        li {
            display: block;
        }

        li + li {
            margin-top: 8px;
        }
    }
}

%gem__input {
  width: 95%;
}

%gem__checkbox {
    position: absolute;
    width: 0;
    height: 0;
    opacity: 0;
    z-index: -100;

    & + label {
        &:before {
            display: inline-block;
            width: 16px;
            width: 1rem;
            height: 16px;
            margin-right: 16px;
            padding: 4px;
            background-color: $colorWhite;
            border: 1px solid $colorGrey;
            vertical-align: middle;
            content: "";
        }
    }

    &:checked + label {
        &:before {
            content: "";
            background-clip: content-box;
            background-color: $colorSecond;
        }
    }

    &[type="radio"] + label {
        &:before {
            border-radius: 50%;
        }
    }
}

%gem__label {
    display: block;
    font-size: 18px;
    color: $colorFirst;
}
.surveys__results {
  overflow: auto;
  padding: 10px 0 0;
}
.surveys__answer {
  span {
    display: block;
    padding: 10px 0;
    word-wrap: break-word;
  }
}
